{"mappings":"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","sources":["<anon>","src/index.js","src/cycling.js","src/workout.js","src/running.js"],"sourcesContent":["class $bee9aaf2499b29b2$var$Workout {\n    date = new Date();\n    // Temporary solution for creating a unique ID\n    id = (Date.now() + \"\").slice(-10);\n    markerID = null;\n    clicks = 0;\n    constructor(coords, distance, duration){\n        this.coords = coords; // [lat, lng]\n        this.distance = distance; // in km\n        this.duration = duration; // in min\n    }\n    _setDescription() {\n        const months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n        ];\n        this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${months[this.date.getMonth()]} ${this.date.getDate()}`;\n    }\n    click() {\n        this.clicks++;\n    }\n}\nvar $bee9aaf2499b29b2$export$2e2bcd8739ae039 = $bee9aaf2499b29b2$var$Workout;\n\n\nclass $98c6a88f587b3d4f$var$Cycling extends (0, $bee9aaf2499b29b2$export$2e2bcd8739ae039) {\n    type = \"cycling\";\n    constructor(coords, distance, duration, elevationGain){\n        super(coords, distance, duration);\n        this.elevationGain = elevationGain;\n        this.calcSpeed();\n        this._setDescription();\n    }\n    calcSpeed() {\n        this.speed = this.distance / (this.duration / 60); // km/h\n        return this.speed;\n    }\n}\nvar $98c6a88f587b3d4f$export$2e2bcd8739ae039 = $98c6a88f587b3d4f$var$Cycling;\n\n\n\nclass $fdab1e71a5973074$var$Running extends (0, $bee9aaf2499b29b2$export$2e2bcd8739ae039) {\n    type = \"running\";\n    constructor(coords, distance, duration, cadence){\n        super(coords, distance, duration);\n        this.cadence = cadence;\n        this.calcPace();\n        this._setDescription();\n    }\n    calcPace() {\n        this.pace = this.duration / this.distance; // min/km\n        return this.pace;\n    }\n}\nvar $fdab1e71a5973074$export$2e2bcd8739ae039 = $fdab1e71a5973074$var$Running;\n\n\n// APPLICATION ARCHITECTURE\nconst $35da740d59af89ba$var$deleteAllBtn = document.querySelector(\".delete__all__btn\");\nconst $35da740d59af89ba$var$sortDistanceBtn = document.querySelector(\".sort__distance__btn\");\nconst $35da740d59af89ba$var$sortDurationBtn = document.querySelector(\".sort__duration__btn\");\nconst $35da740d59af89ba$var$form = document.querySelector(\".form\");\nconst $35da740d59af89ba$var$formClose = document.querySelector(\".form__close__btn\");\nconst $35da740d59af89ba$var$containerWorkouts = document.querySelector(\".workouts\");\nconst $35da740d59af89ba$var$inputType = document.querySelector(\".form__input--type\");\nconst $35da740d59af89ba$var$inputDistance = document.querySelector(\".form__input--distance\");\nconst $35da740d59af89ba$var$inputDuration = document.querySelector(\".form__input--duration\");\nconst $35da740d59af89ba$var$inputCadence = document.querySelector(\".form__input--cadence\");\nconst $35da740d59af89ba$var$inputElevation = document.querySelector(\".form__input--elevation\");\nclass $35da740d59af89ba$var$App {\n    // Private instance properties\n    #map;\n    #mapZoomLevel = 13;\n    #mapEvent;\n    #layerGroup;\n    #workouts = [];\n    #currentEventObject = null;\n    #isDistanceAscendingSort = false;\n    #isDurationAscendingSort = false;\n    // Method 1 - Constructor\n    constructor(){\n        this._getPosition();\n        this._getLocalStorage();\n        $35da740d59af89ba$var$deleteAllBtn.addEventListener(\"click\", this._deleteAllWorkouts.bind(this));\n        $35da740d59af89ba$var$sortDistanceBtn.addEventListener(\"click\", this._sortWorkouts.bind(this));\n        $35da740d59af89ba$var$sortDurationBtn.addEventListener(\"click\", this._sortWorkouts.bind(this));\n        // An event handler function will always have the \"this\" keyword of the DOM element onto which it is attached.\n        // So below, \"this\" points to the form not the app object!\n        // So to fix this, must use bind method.\n        $35da740d59af89ba$var$form.addEventListener(\"submit\", this._newWorkout.bind(this));\n        $35da740d59af89ba$var$formClose.addEventListener(\"click\", this._hideForm.bind(this));\n        $35da740d59af89ba$var$inputType.addEventListener(\"change\", this._toggleElevationField.bind(this));\n        $35da740d59af89ba$var$containerWorkouts.addEventListener(\"click\", this._moveToPopup.bind(this));\n    }\n    // Method 2 - Fetch current position of the user\n    _getPosition() {\n        if (navigator.geolocation) // Must use bind method else \"this\" will be set to undefined!\n        navigator.geolocation.getCurrentPosition(this._loadMap.bind(this), function() {\n            alert(\"Could not get your position :(\");\n        });\n    }\n    // Method 3 - Load map based on the fetched position of the user\n    _loadMap(position) {\n        const { latitude: latitude } = position.coords;\n        const { longitude: longitude } = position.coords;\n        const coords = [\n            latitude,\n            longitude\n        ];\n        // \"this\" is undefined below if bind method not used when calling _loadMap()\n        this.#map = L.map(\"map\").setView(coords, this.#mapZoomLevel);\n        this.#layerGroup = L.layerGroup();\n        this.#layerGroup.addTo(this.#map);\n        L.tileLayer(\"https://tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\", {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(this.#map);\n        // Handling clicks on map\n        this.#map.on(\"click\", this._showForm.bind(this));\n        this.#workouts.forEach((work)=>this._renderWorkoutMarker(work));\n    }\n    // Method 4 - Show form to create or edit a workout\n    _showForm(mapE, type = \"running\", distance = \"\", duration = \"\", performance = \"\") {\n        this.#mapEvent = mapE;\n        $35da740d59af89ba$var$form.classList.remove(\"hidden\");\n        $35da740d59af89ba$var$inputDistance.focus();\n        // Run the following if trying to edit a previously created workout\n        if (distance !== \"\") {\n            $35da740d59af89ba$var$inputType.value = type;\n            $35da740d59af89ba$var$inputDistance.value = distance;\n            $35da740d59af89ba$var$inputDuration.value = duration;\n            if (type === \"running\") {\n                $35da740d59af89ba$var$inputCadence.closest(\".form__row\").classList.remove(\"form__row--hidden\");\n                $35da740d59af89ba$var$inputElevation.closest(\".form__row\").classList.add(\"form__row--hidden\");\n                $35da740d59af89ba$var$inputCadence.value = performance;\n            }\n            if (type === \"cycling\") {\n                $35da740d59af89ba$var$inputCadence.closest(\".form__row\").classList.add(\"form__row--hidden\");\n                $35da740d59af89ba$var$inputElevation.closest(\".form__row\").classList.remove(\"form__row--hidden\");\n                $35da740d59af89ba$var$inputElevation.value = performance;\n            }\n        }\n    }\n    // Method 5 - Hide form used to create or edit a workout\n    _hideForm() {\n        // Empty the inputs\n        $35da740d59af89ba$var$inputDistance.value = $35da740d59af89ba$var$inputDuration.value = $35da740d59af89ba$var$inputCadence.value = $35da740d59af89ba$var$inputElevation.value = \"\";\n        // Remove glow effect from previously selected workout\n        this._removeGlowEffect();\n        $35da740d59af89ba$var$form.style.display = \"none\";\n        $35da740d59af89ba$var$form.classList.add(\"hidden\");\n        setTimeout(()=>$35da740d59af89ba$var$form.style.display = \"grid\", 1000);\n    }\n    // Method 6 - Toggle between elevation and cadence input row\n    _toggleElevationField() {\n        $35da740d59af89ba$var$inputElevation.closest(\".form__row\").classList.toggle(\"form__row--hidden\");\n        $35da740d59af89ba$var$inputCadence.closest(\".form__row\").classList.toggle(\"form__row--hidden\");\n    }\n    // Method 7 - Create workout based on the input data from the previous form\n    _newWorkout(e) {\n        const validInputs = (...inputs)=>inputs.every((inp)=>Number.isFinite(inp));\n        const allPositive = (...inputs)=>inputs.every((inp)=>inp > 0);\n        e.preventDefault();\n        // Get data from form\n        const type = $35da740d59af89ba$var$inputType.value;\n        const distance = +$35da740d59af89ba$var$inputDistance.value;\n        const duration = +$35da740d59af89ba$var$inputDuration.value;\n        const { lat: lat, lng: lng } = this.#mapEvent.latlng;\n        let workout;\n        // If workout running, create running object\n        if (type === \"running\") {\n            const cadence = +$35da740d59af89ba$var$inputCadence.value;\n            // Check if data is valid\n            if (!validInputs(distance, duration, cadence) || !allPositive(distance, duration, cadence)) return alert(\"Inputs have to be positive numbers!\");\n            workout = new (0, $fdab1e71a5973074$export$2e2bcd8739ae039)([\n                lat,\n                lng\n            ], distance, duration, cadence);\n        }\n        // If workout cycling, create cycling object\n        if (type === \"cycling\") {\n            const elevation = +$35da740d59af89ba$var$inputElevation.value;\n            // Elevation can be negative, so it is not included when using allPositive()\n            if (!validInputs(distance, duration, elevation) || !allPositive(distance, duration)) return alert(\"Inputs have to be positive numbers!\");\n            workout = new (0, $98c6a88f587b3d4f$export$2e2bcd8739ae039)([\n                lat,\n                lng\n            ], distance, duration, elevation);\n        }\n        // Add new object to workout array\n        this.#workouts.push(workout);\n        // Render workout on map as marker\n        this._renderWorkoutMarker(workout);\n        // Render workout on list\n        this._renderWorkout(workout);\n        // Hide form + Clear input fields\n        this._hideForm();\n        // Set local storage\n        this._setLocalStorage();\n        // In case of an edit, also remove old workout\n        if (this.#currentEventObject) this._deleteWorkout(this.#currentEventObject);\n    }\n    // Method 8 - Render a map marker to represent a workout\n    _renderWorkoutMarker(workout) {\n        const markerObject = L.marker(workout.coords).addTo(this.#layerGroup).bindPopup(L.popup({\n            maxWidth: 250,\n            minWidth: 100,\n            autoClose: false,\n            closeOnClick: false,\n            className: `${workout.type}-popup`\n        })).setPopupContent(`${workout.type === \"running\" ? \"\\uD83C\\uDFC3\\u200D\" : \"\\uD83D\\uDEB4\"} ${workout.description}`).openPopup();\n        workout.markerID = markerObject._leaflet_id;\n    }\n    // Method 9 - Render a list item in the sidebar to represent a workout\n    _renderWorkout(workout) {\n        let html = `\r\n            <li class=\"workout workout--${workout.type}\" data-id=${workout.id}>\r\n              <h2 class=\"workout__title\">${workout.description}</h2>\r\n              <div class=\"buttons__group\">\r\n                <button class=\"workout__edit\"> \\u{2699}\\u{FE0F} </button>\r\n                <button class=\"workout__close\"> \\u{274C} </button>\r\n              </div>\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">${workout.type === \"running\" ? \"\\uD83C\\uDFC3\\u200D\" : \"\\uD83D\\uDEB4\"}\\u{FE0F}</span>\r\n                <span class=\"workout__value\">${workout.distance}</span>\r\n                <span class=\"workout__unit\">km</span>\r\n              </div>\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">\\u{23F1}</span>\r\n                <span class=\"workout__value\">${workout.duration}</span>\r\n                <span class=\"workout__unit\">min</span>\r\n              </div>\r\n              `;\n        if (workout.type === \"running\") html += `\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">\\u{26A1}\\u{FE0F}</span>\r\n                <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\r\n                <span class=\"workout__unit\">min/km</span>\r\n              </div>\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">\\u{1F9B6}\\u{1F3FC}</span>\r\n                <span class=\"workout__value\">${workout.cadence}</span>\r\n                <span class=\"workout__unit\">spm</span>\r\n              </div>\r\n              `;\n        if (workout.type === \"cycling\") html += `\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">\\u{26A1}\\u{FE0F}</span>\r\n                <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\r\n                <span class=\"workout__unit\">km/h</span>\r\n              </div>\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">\\u{26F0}</span>\r\n                <span class=\"workout__value\">${workout.elevationGain}</span>\r\n                <span class=\"workout__unit\">m</span>\r\n              </div>\r\n              `;\n        $35da740d59af89ba$var$containerWorkouts.insertAdjacentHTML(\"afterbegin\", html);\n        const workoutClose = document.querySelector(\".workout__close\");\n        const workoutEdit = document.querySelector(\".workout__edit\");\n        workoutClose.addEventListener(\"click\", this._deleteWorkout.bind(this));\n        workoutEdit.addEventListener(\"click\", this._editWorkout.bind(this));\n    }\n    // Method 10 - Enable workout edit functionality when clicking on the edit button\n    _editWorkout(e) {\n        // Remove glow effect from previously selected workout\n        this._removeGlowEffect();\n        this.#currentEventObject = e;\n        const workoutEl = e.target.closest(\".workout\");\n        const workout = this.#workouts.find((work)=>work.id === workoutEl.dataset.id);\n        const performance = workout?.cadence ?? workout.elevationGain;\n        const mapE = {\n            latlng: {\n                lat: workout.coords[0],\n                lng: workout.coords[1]\n            }\n        };\n        workoutEl.classList.add(\"workout__glow\");\n        // Add updated workout\n        this._showForm(mapE, workout.type, workout.distance, workout.duration, performance);\n    }\n    // Method 11 - Enable workout removal when clicking on the close button\n    _deleteWorkout(e) {\n        // Remove workout from sidebar\n        const workoutEl = e.target.closest(\".workout\");\n        $35da740d59af89ba$var$containerWorkouts.removeChild(workoutEl);\n        // Remove workout marker on map\n        const workout = this.#workouts.find((work)=>work.id === workoutEl.dataset.id);\n        const markerToRemove = this.#layerGroup.getLayer(workout.markerID);\n        if (markerToRemove) this.#layerGroup.removeLayer(markerToRemove);\n        // Remove object from workout array\n        const indexToRemove = this.#workouts.findIndex((obj)=>obj.id === workoutEl.dataset.id);\n        if (indexToRemove !== -1) this.#workouts.splice(indexToRemove, 1);\n        // Update localstorage\n        this._setLocalStorage();\n        // In case of an edit, reset #currentEventObject\n        this.#currentEventObject = null;\n    }\n    // Method 12 - Delete all created workouts\n    _deleteAllWorkouts(e) {\n        // To prevent error when clicking on \"delete all\" button and map is not loaded yet\n        if (!this.#map) return;\n        // Remove all workouts from the sidebar\n        while($35da740d59af89ba$var$containerWorkouts.lastChild)$35da740d59af89ba$var$containerWorkouts.removeChild($35da740d59af89ba$var$containerWorkouts.lastChild);\n        // Remove all workout marker on map\n        this.#layerGroup.clearLayers();\n        // Remove object from workout array\n        this.#workouts = [];\n        // Update localstorage\n        this._setLocalStorage();\n        this.#currentEventObject = null;\n    }\n    // Method 13 - Enable workout sorting functionality (either by distance or duration)\n    _sortWorkouts(e) {\n        const sortType = e.target.value;\n        if (sortType === \"distance\") {\n            const sortMultiplier = this.#isDistanceAscendingSort ? 1 : -1;\n            this.#workouts.sort((a, b)=>sortMultiplier * (b.distance - a.distance));\n            this.#isDistanceAscendingSort = !this.#isDistanceAscendingSort;\n        }\n        if (sortType === \"duration\") {\n            const sortMultiplier = this.#isDurationAscendingSort ? 1 : -1;\n            this.#workouts.sort((a, b)=>sortMultiplier * (b.duration - a.duration));\n            this.#isDurationAscendingSort = !this.#isDurationAscendingSort;\n        }\n        while($35da740d59af89ba$var$containerWorkouts.lastChild)$35da740d59af89ba$var$containerWorkouts.removeChild($35da740d59af89ba$var$containerWorkouts.lastChild);\n        this._setLocalStorage();\n        this._getLocalStorage();\n    }\n    // Method 14 - Control glow effect around a workout list item in the sidebar when editing them\n    _removeGlowEffect() {\n        if (this.#currentEventObject) this.#currentEventObject.target.closest(\".workout\").classList.remove(\"workout__glow\");\n    }\n    // Method 15 - Enable moving to a workout map marker when clicking on its corresponding list item in the sidebar\n    _moveToPopup(e) {\n        const workoutEl = e.target.closest(\".workout\");\n        if (!workoutEl) return;\n        const workout = this.#workouts.find((work)=>work.id === workoutEl.dataset.id);\n        if (!workout) return;\n        this.#map.setView(workout.coords, this.#mapZoomLevel, {\n            animate: true,\n            pan: {\n                duration: 1\n            }\n        });\n    // Testing out the public interface in workout.js\n    // Will give error when using it on an object created from a localstorage string\n    // This is because prototype chain is already broken when converting from string back to object\n    // workout.click();\n    }\n    // Method 16 - Store data in the localStorage to persist it across refreshes\n    _setLocalStorage() {\n        localStorage.setItem(\"workouts\", JSON.stringify(this.#workouts));\n    }\n    // Method 17 - Retrieve data from the localStorage\n    _getLocalStorage() {\n        const data = JSON.parse(localStorage.getItem(\"workouts\"));\n        if (!data) return;\n        this.#workouts = data;\n        this.#workouts.forEach((work)=>{\n            this._renderWorkout(work);\n        });\n    }\n    // Method 18 - Reset app by emptying the localStorage\n    reset() {\n        localStorage.removeItem(\"workouts\");\n        location.reload();\n    }\n}\nconst $35da740d59af89ba$var$app = new $35da740d59af89ba$var$App();\n\n\n//# sourceMappingURL=index.5e7c9bcf.js.map\n","import Cycling from \"./cycling.js\";\r\nimport Running from \"./running.js\";\r\n\r\n// APPLICATION ARCHITECTURE\r\nconst deleteAllBtn = document.querySelector(\".delete__all__btn\");\r\nconst sortDistanceBtn = document.querySelector(\".sort__distance__btn\");\r\nconst sortDurationBtn = document.querySelector(\".sort__duration__btn\");\r\nconst form = document.querySelector(\".form\");\r\nconst formClose = document.querySelector(\".form__close__btn\");\r\nconst containerWorkouts = document.querySelector(\".workouts\");\r\nconst inputType = document.querySelector(\".form__input--type\");\r\nconst inputDistance = document.querySelector(\".form__input--distance\");\r\nconst inputDuration = document.querySelector(\".form__input--duration\");\r\nconst inputCadence = document.querySelector(\".form__input--cadence\");\r\nconst inputElevation = document.querySelector(\".form__input--elevation\");\r\n\r\nclass App {\r\n  // Private instance properties\r\n  #map;\r\n  #mapZoomLevel = 13;\r\n  #mapEvent;\r\n  #layerGroup;\r\n  #workouts = []; // Array containing all workout objects\r\n  #currentEventObject = null;\r\n  #isDistanceAscendingSort = false;\r\n  #isDurationAscendingSort = false;\r\n\r\n  // Method 1 - Constructor\r\n  constructor() {\r\n    this._getPosition();\r\n    this._getLocalStorage();\r\n\r\n    deleteAllBtn.addEventListener(\"click\", this._deleteAllWorkouts.bind(this));\r\n    sortDistanceBtn.addEventListener(\"click\", this._sortWorkouts.bind(this));\r\n    sortDurationBtn.addEventListener(\"click\", this._sortWorkouts.bind(this));\r\n    // An event handler function will always have the \"this\" keyword of the DOM element onto which it is attached.\r\n    // So below, \"this\" points to the form not the app object!\r\n    // So to fix this, must use bind method.\r\n    form.addEventListener(\"submit\", this._newWorkout.bind(this));\r\n    formClose.addEventListener(\"click\", this._hideForm.bind(this));\r\n    inputType.addEventListener(\"change\", this._toggleElevationField.bind(this));\r\n    containerWorkouts.addEventListener(\"click\", this._moveToPopup.bind(this));\r\n  }\r\n\r\n  // Method 2 - Fetch current position of the user\r\n  _getPosition() {\r\n    if (navigator.geolocation)\r\n      // Must use bind method else \"this\" will be set to undefined!\r\n      navigator.geolocation.getCurrentPosition(\r\n        this._loadMap.bind(this),\r\n        function () {\r\n          alert(\"Could not get your position :(\");\r\n        }\r\n      );\r\n  }\r\n\r\n  // Method 3 - Load map based on the fetched position of the user\r\n  _loadMap(position) {\r\n    const { latitude } = position.coords;\r\n    const { longitude } = position.coords;\r\n    const coords = [latitude, longitude];\r\n    // \"this\" is undefined below if bind method not used when calling _loadMap()\r\n    this.#map = L.map(\"map\").setView(coords, this.#mapZoomLevel);\r\n    this.#layerGroup = L.layerGroup();\r\n\r\n    this.#layerGroup.addTo(this.#map);\r\n\r\n    L.tileLayer(\"https://tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\", {\r\n      attribution:\r\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n    }).addTo(this.#map);\r\n\r\n    // Handling clicks on map\r\n    this.#map.on(\"click\", this._showForm.bind(this));\r\n\r\n    this.#workouts.forEach((work) => this._renderWorkoutMarker(work));\r\n  }\r\n\r\n  // Method 4 - Show form to create or edit a workout\r\n  _showForm(\r\n    mapE,\r\n    type = \"running\",\r\n    distance = \"\",\r\n    duration = \"\",\r\n    performance = \"\"\r\n  ) {\r\n    this.#mapEvent = mapE;\r\n    form.classList.remove(\"hidden\");\r\n    inputDistance.focus();\r\n\r\n    // Run the following if trying to edit a previously created workout\r\n    if (distance !== \"\") {\r\n      inputType.value = type;\r\n      inputDistance.value = distance;\r\n      inputDuration.value = duration;\r\n      if (type === \"running\") {\r\n        inputCadence\r\n          .closest(\".form__row\")\r\n          .classList.remove(\"form__row--hidden\");\r\n        inputElevation.closest(\".form__row\").classList.add(\"form__row--hidden\");\r\n        inputCadence.value = performance;\r\n      }\r\n      if (type === \"cycling\") {\r\n        inputCadence.closest(\".form__row\").classList.add(\"form__row--hidden\");\r\n        inputElevation\r\n          .closest(\".form__row\")\r\n          .classList.remove(\"form__row--hidden\");\r\n        inputElevation.value = performance;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Method 5 - Hide form used to create or edit a workout\r\n  _hideForm() {\r\n    // Empty the inputs\r\n    inputDistance.value =\r\n      inputDuration.value =\r\n      inputCadence.value =\r\n      inputElevation.value =\r\n        \"\";\r\n\r\n    // Remove glow effect from previously selected workout\r\n    this._removeGlowEffect();\r\n\r\n    form.style.display = \"none\";\r\n    form.classList.add(\"hidden\");\r\n    setTimeout(() => (form.style.display = \"grid\"), 1000);\r\n  }\r\n\r\n  // Method 6 - Toggle between elevation and cadence input row\r\n  _toggleElevationField() {\r\n    inputElevation.closest(\".form__row\").classList.toggle(\"form__row--hidden\");\r\n    inputCadence.closest(\".form__row\").classList.toggle(\"form__row--hidden\");\r\n  }\r\n\r\n  // Method 7 - Create workout based on the input data from the previous form\r\n  _newWorkout(e) {\r\n    const validInputs = (...inputs) =>\r\n      inputs.every((inp) => Number.isFinite(inp));\r\n    const allPositive = (...inputs) => inputs.every((inp) => inp > 0);\r\n\r\n    e.preventDefault();\r\n\r\n    // Get data from form\r\n    const type = inputType.value;\r\n    const distance = +inputDistance.value;\r\n    const duration = +inputDuration.value;\r\n    const { lat, lng } = this.#mapEvent.latlng;\r\n    let workout;\r\n\r\n    // If workout running, create running object\r\n    if (type === \"running\") {\r\n      const cadence = +inputCadence.value;\r\n      // Check if data is valid\r\n      if (\r\n        !validInputs(distance, duration, cadence) ||\r\n        !allPositive(distance, duration, cadence)\r\n      )\r\n        return alert(\"Inputs have to be positive numbers!\");\r\n      workout = new Running([lat, lng], distance, duration, cadence);\r\n    }\r\n\r\n    // If workout cycling, create cycling object\r\n    if (type === \"cycling\") {\r\n      const elevation = +inputElevation.value;\r\n      // Elevation can be negative, so it is not included when using allPositive()\r\n      if (\r\n        !validInputs(distance, duration, elevation) ||\r\n        !allPositive(distance, duration)\r\n      )\r\n        return alert(\"Inputs have to be positive numbers!\");\r\n      workout = new Cycling([lat, lng], distance, duration, elevation);\r\n    }\r\n\r\n    // Add new object to workout array\r\n    this.#workouts.push(workout);\r\n\r\n    // Render workout on map as marker\r\n    this._renderWorkoutMarker(workout);\r\n\r\n    // Render workout on list\r\n    this._renderWorkout(workout);\r\n\r\n    // Hide form + Clear input fields\r\n    this._hideForm();\r\n\r\n    // Set local storage\r\n    this._setLocalStorage();\r\n\r\n    // In case of an edit, also remove old workout\r\n    if (this.#currentEventObject) this._deleteWorkout(this.#currentEventObject);\r\n  }\r\n\r\n  // Method 8 - Render a map marker to represent a workout\r\n  _renderWorkoutMarker(workout) {\r\n    const markerObject = L.marker(workout.coords)\r\n      .addTo(this.#layerGroup)\r\n      .bindPopup(\r\n        L.popup({\r\n          maxWidth: 250,\r\n          minWidth: 100,\r\n          autoClose: false,\r\n          closeOnClick: false,\r\n          className: `${workout.type}-popup`,\r\n        })\r\n      )\r\n      .setPopupContent(\r\n        `${workout.type === \"running\" ? \"🏃‍\" : \"🚴\"} ${workout.description}`\r\n      )\r\n      .openPopup();\r\n    workout.markerID = markerObject._leaflet_id;\r\n  }\r\n\r\n  // Method 9 - Render a list item in the sidebar to represent a workout\r\n  _renderWorkout(workout) {\r\n    let html = `\r\n            <li class=\"workout workout--${workout.type}\" data-id=${workout.id}>\r\n              <h2 class=\"workout__title\">${workout.description}</h2>\r\n              <div class=\"buttons__group\">\r\n                <button class=\"workout__edit\"> ⚙️ </button>\r\n                <button class=\"workout__close\"> ❌ </button>\r\n              </div>\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">${\r\n                  workout.type === \"running\" ? \"🏃‍\" : \"🚴\"\r\n                }️</span>\r\n                <span class=\"workout__value\">${workout.distance}</span>\r\n                <span class=\"workout__unit\">km</span>\r\n              </div>\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">⏱</span>\r\n                <span class=\"workout__value\">${workout.duration}</span>\r\n                <span class=\"workout__unit\">min</span>\r\n              </div>\r\n              `;\r\n\r\n    if (workout.type === \"running\")\r\n      html += `\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">⚡️</span>\r\n                <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\r\n                <span class=\"workout__unit\">min/km</span>\r\n              </div>\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">🦶🏼</span>\r\n                <span class=\"workout__value\">${workout.cadence}</span>\r\n                <span class=\"workout__unit\">spm</span>\r\n              </div>\r\n              `;\r\n\r\n    if (workout.type === \"cycling\")\r\n      html += `\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">⚡️</span>\r\n                <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\r\n                <span class=\"workout__unit\">km/h</span>\r\n              </div>\r\n              <div class=\"workout__details\">\r\n                <span class=\"workout__icon\">⛰</span>\r\n                <span class=\"workout__value\">${workout.elevationGain}</span>\r\n                <span class=\"workout__unit\">m</span>\r\n              </div>\r\n              `;\r\n\r\n    containerWorkouts.insertAdjacentHTML(\"afterbegin\", html);\r\n\r\n    const workoutClose = document.querySelector(\".workout__close\");\r\n    const workoutEdit = document.querySelector(\".workout__edit\");\r\n    workoutClose.addEventListener(\"click\", this._deleteWorkout.bind(this));\r\n    workoutEdit.addEventListener(\"click\", this._editWorkout.bind(this));\r\n  }\r\n\r\n  // Method 10 - Enable workout edit functionality when clicking on the edit button\r\n  _editWorkout(e) {\r\n    // Remove glow effect from previously selected workout\r\n    this._removeGlowEffect();\r\n\r\n    this.#currentEventObject = e;\r\n    const workoutEl = e.target.closest(\".workout\");\r\n    const workout = this.#workouts.find(\r\n      (work) => work.id === workoutEl.dataset.id\r\n    );\r\n    const performance = workout?.cadence ?? workout.elevationGain;\r\n    const mapE = { latlng: { lat: workout.coords[0], lng: workout.coords[1] } };\r\n\r\n    workoutEl.classList.add(\"workout__glow\");\r\n\r\n    // Add updated workout\r\n    this._showForm(\r\n      mapE,\r\n      workout.type,\r\n      workout.distance,\r\n      workout.duration,\r\n      performance\r\n    );\r\n  }\r\n\r\n  // Method 11 - Enable workout removal when clicking on the close button\r\n  _deleteWorkout(e) {\r\n    // Remove workout from sidebar\r\n    const workoutEl = e.target.closest(\".workout\");\r\n    containerWorkouts.removeChild(workoutEl);\r\n\r\n    // Remove workout marker on map\r\n    const workout = this.#workouts.find(\r\n      (work) => work.id === workoutEl.dataset.id\r\n    );\r\n    const markerToRemove = this.#layerGroup.getLayer(workout.markerID);\r\n    if (markerToRemove) this.#layerGroup.removeLayer(markerToRemove);\r\n\r\n    // Remove object from workout array\r\n    const indexToRemove = this.#workouts.findIndex(\r\n      (obj) => obj.id === workoutEl.dataset.id\r\n    );\r\n    if (indexToRemove !== -1) this.#workouts.splice(indexToRemove, 1);\r\n\r\n    // Update localstorage\r\n    this._setLocalStorage();\r\n\r\n    // In case of an edit, reset #currentEventObject\r\n    this.#currentEventObject = null;\r\n  }\r\n\r\n  // Method 12 - Delete all created workouts\r\n  _deleteAllWorkouts(e) {\r\n    // To prevent error when clicking on \"delete all\" button and map is not loaded yet\r\n    if (!this.#map) return;\r\n\r\n    // Remove all workouts from the sidebar\r\n    while (containerWorkouts.lastChild) {\r\n      containerWorkouts.removeChild(containerWorkouts.lastChild);\r\n    }\r\n\r\n    // Remove all workout marker on map\r\n    this.#layerGroup.clearLayers();\r\n\r\n    // Remove object from workout array\r\n    this.#workouts = [];\r\n\r\n    // Update localstorage\r\n    this._setLocalStorage();\r\n\r\n    this.#currentEventObject = null;\r\n  }\r\n\r\n  // Method 13 - Enable workout sorting functionality (either by distance or duration)\r\n  _sortWorkouts(e) {\r\n    const sortType = e.target.value;\r\n\r\n    if (sortType === \"distance\") {\r\n      const sortMultiplier = this.#isDistanceAscendingSort ? 1 : -1;\r\n      this.#workouts.sort((a, b) => sortMultiplier * (b.distance - a.distance));\r\n      this.#isDistanceAscendingSort = !this.#isDistanceAscendingSort;\r\n    }\r\n\r\n    if (sortType === \"duration\") {\r\n      const sortMultiplier = this.#isDurationAscendingSort ? 1 : -1;\r\n      this.#workouts.sort((a, b) => sortMultiplier * (b.duration - a.duration));\r\n      this.#isDurationAscendingSort = !this.#isDurationAscendingSort;\r\n    }\r\n\r\n    while (containerWorkouts.lastChild) {\r\n      containerWorkouts.removeChild(containerWorkouts.lastChild);\r\n    }\r\n\r\n    this._setLocalStorage();\r\n    this._getLocalStorage();\r\n  }\r\n\r\n  // Method 14 - Control glow effect around a workout list item in the sidebar when editing them\r\n  _removeGlowEffect() {\r\n    if (this.#currentEventObject)\r\n      this.#currentEventObject.target\r\n        .closest(\".workout\")\r\n        .classList.remove(\"workout__glow\");\r\n  }\r\n\r\n  // Method 15 - Enable moving to a workout map marker when clicking on its corresponding list item in the sidebar\r\n  _moveToPopup(e) {\r\n    const workoutEl = e.target.closest(\".workout\");\r\n\r\n    if (!workoutEl) return;\r\n\r\n    const workout = this.#workouts.find(\r\n      (work) => work.id === workoutEl.dataset.id\r\n    );\r\n\r\n    if (!workout) return;\r\n\r\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\r\n      animate: true,\r\n      pan: {\r\n        duration: 1,\r\n      },\r\n    });\r\n\r\n    // Testing out the public interface in workout.js\r\n    // Will give error when using it on an object created from a localstorage string\r\n    // This is because prototype chain is already broken when converting from string back to object\r\n    // workout.click();\r\n  }\r\n\r\n  // Method 16 - Store data in the localStorage to persist it across refreshes\r\n  _setLocalStorage() {\r\n    localStorage.setItem(\"workouts\", JSON.stringify(this.#workouts));\r\n  }\r\n\r\n  // Method 17 - Retrieve data from the localStorage\r\n  _getLocalStorage() {\r\n    const data = JSON.parse(localStorage.getItem(\"workouts\"));\r\n\r\n    if (!data) return;\r\n\r\n    this.#workouts = data;\r\n\r\n    this.#workouts.forEach((work) => {\r\n      this._renderWorkout(work);\r\n    });\r\n  }\r\n\r\n  // Method 18 - Reset app by emptying the localStorage\r\n  reset() {\r\n    localStorage.removeItem(\"workouts\");\r\n    location.reload();\r\n  }\r\n}\r\n\r\nconst app = new App();\r\n","import Workout from \"./workout.js\";\r\n\r\nclass Cycling extends Workout {\r\n  type = \"cycling\";\r\n\r\n  constructor(coords, distance, duration, elevationGain) {\r\n    super(coords, distance, duration);\r\n    this.elevationGain = elevationGain;\r\n    this.calcSpeed();\r\n    this._setDescription();\r\n  }\r\n\r\n  calcSpeed() {\r\n    this.speed = this.distance / (this.duration / 60); // km/h\r\n    return this.speed;\r\n  }\r\n}\r\n\r\nexport default Cycling;\r\n","class Workout {\r\n  date = new Date();\r\n  // Temporary solution for creating a unique ID\r\n  id = (Date.now() + \"\").slice(-10);\r\n  markerID = null;\r\n  clicks = 0;\r\n\r\n  constructor(coords, distance, duration) {\r\n    this.coords = coords; // [lat, lng]\r\n    this.distance = distance; // in km\r\n    this.duration = duration; // in min\r\n  }\r\n\r\n  _setDescription() {\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\r\n      months[this.date.getMonth()]\r\n    } ${this.date.getDate()}`;\r\n  }\r\n\r\n  click() {\r\n    this.clicks++;\r\n  }\r\n}\r\n\r\nexport default Workout;\r\n","import Workout from \"./workout.js\";\r\n\r\nclass Running extends Workout {\r\n  type = \"running\";\r\n\r\n  constructor(coords, distance, duration, cadence) {\r\n    super(coords, distance, duration);\r\n    this.cadence = cadence;\r\n    this.calcPace();\r\n    this._setDescription();\r\n  }\r\n\r\n  calcPace() {\r\n    this.pace = this.duration / this.distance; // min/km\r\n    return this.pace;\r\n  }\r\n}\r\n\r\nexport default Running;\r\n"],"names":["$bee9aaf2499b29b2$var$Workout","date","Date","id","now","slice","markerID","clicks","constructor","coords","distance","duration","_setDescription","description","type","toUpperCase","months","getMonth","getDate","click","$bee9aaf2499b29b2$export$2e2bcd8739ae039","$98c6a88f587b3d4f$export$2e2bcd8739ae039","elevationGain","calcSpeed","speed","$fdab1e71a5973074$export$2e2bcd8739ae039","cadence","calcPace","pace","$35da740d59af89ba$var$deleteAllBtn","document","querySelector","$35da740d59af89ba$var$sortDistanceBtn","$35da740d59af89ba$var$sortDurationBtn","$35da740d59af89ba$var$form","$35da740d59af89ba$var$formClose","$35da740d59af89ba$var$containerWorkouts","$35da740d59af89ba$var$inputType","$35da740d59af89ba$var$inputDistance","$35da740d59af89ba$var$inputDuration","$35da740d59af89ba$var$inputCadence","$35da740d59af89ba$var$inputElevation","map","mapZoomLevel","mapEvent","layerGroup","workouts","currentEventObject","isDistanceAscendingSort","isDurationAscendingSort","_getPosition","_getLocalStorage","addEventListener","_deleteAllWorkouts","bind","_sortWorkouts","_newWorkout","_hideForm","_toggleElevationField","_moveToPopup","navigator","geolocation","getCurrentPosition","_loadMap","alert","position","latitude","longitude","L","setView","addTo","tileLayer","attribution","on","_showForm","forEach","work","_renderWorkoutMarker","mapE","performance","classList","remove","focus","value","closest","add","_removeGlowEffect","style","display","setTimeout","toggle","e","workout","validInputs","inputs","every","inp","Number","isFinite","allPositive","preventDefault","lat","lng","latlng","elevation","push","_renderWorkout","_setLocalStorage","_deleteWorkout","markerObject","marker","bindPopup","popup","maxWidth","minWidth","autoClose","closeOnClick","className","setPopupContent","openPopup","_leaflet_id","html","toFixed","insertAdjacentHTML","workoutClose","workoutEdit","_editWorkout","workoutEl","target","find","dataset","removeChild","markerToRemove","getLayer","removeLayer","indexToRemove","findIndex","obj","splice","lastChild","clearLayers","sortType","sortMultiplier","sort","a","b","animate","pan","localStorage","setItem","JSON","stringify","data","parse","getItem","reset","removeItem","location","reload"],"version":3,"file":"index.5e7c9bcf.js.map"}